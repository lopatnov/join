{"version":3,"file":"join.es.js","sources":["../src/join.ts"],"sourcesContent":["/**\n * Join Types\n */\nexport enum JoinTypes {\n  none = 0b0000,\n  left = 0b1000,\n  right = 0b0001,\n  innerLeft = 0b0100,\n  innerRight = 0b0010,\n  innerJoin = none | innerLeft | innerRight | none,\n  leftJoin =  left | innerLeft | innerRight | none,\n  rightJoin = none | innerLeft | innerRight | right,\n  fullJoin =  left | innerLeft | innerRight | right,\n  expand =    left | none      | innerRight | right\n}\n\nfunction getPartNames(left: any, right: any) {\n  let namesLeft = Object.getOwnPropertyNames(left);\n  let namesRight = Object.getOwnPropertyNames(right);\n  let namesMid = namesLeft.filter(x => namesRight.indexOf(x) > -1);\n  namesLeft = namesLeft.filter(x => namesMid.indexOf(x) < 0);\n  namesRight = namesRight.filter(x => namesMid.indexOf(x) < 0);\n  return {\n    left: namesLeft,\n    middle: namesMid,\n    right: namesRight\n  };\n}\n\nfunction clearNames(obj: any, names: string[]) {\n  for (let i = 0; i < names.length; i++) {\n    delete obj[names[i]];\n  }\n}\n\nfunction attach(toObj: any, attachment: any, names: string[]) {\n  if (toObj === attachment) return;\n\n  for (let i = 0; i < names.length; i++) {\n    let descriptor = Object.getOwnPropertyDescriptor(attachment, names[i]);\n    Object.defineProperty(toObj, names[i], descriptor as PropertyDescriptor);\n  }\n}\n\nfunction isFunction(obj: any) {\n  // Support: Chrome <=57, Firefox <=52\n  // In some browsers, typeof returns \"function\" for HTML <object> elements\n  // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n  // We don't want to classify *any* DOM node as a function.\n  return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n}\n\nfunction isPlainObject(obj: any) {\n  var proto, Ctor;\n  let toString = Object.prototype.toString;\n  let getProto = Object.getPrototypeOf;\n  let hasOwn = Object.prototype.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n\n  // Detect obvious negatives\n  // Use toString instead of type to catch host objects\n  if (!obj || toString.call(obj) !== \"[object Object]\") {\n    return false;\n  }\n\n  proto = getProto(obj);\n\n  // Objects with no prototype (e.g., `Object.create( null )`) are plain\n  if (!proto) {\n    return true;\n  }\n\n  // Objects with prototype are plain iff they were constructed by a global Object function\n  Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n  return (\n    typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString\n  );\n}\n\nfunction extend(...args: any[]) {\n  var options,\n    name,\n    src,\n    copy,\n    copyIsArray,\n    clone,\n    target = arguments[0] || {},\n    i = 1,\n    length = arguments.length,\n    deep = false;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // Skip the boolean and the target\n    target = arguments[i] || {};\n    i++;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !isFunction(target)) {\n    target = {};\n  }\n\n  // Extend itself if only one argument is passed\n  if (i === length) {\n    target = {};\n    i--;\n  }\n\n  for (; i < length; i++) {\n    // Only deal with non-null/undefined values\n    if ((options = arguments[i]) != null) {\n      // Extend the base object\n      for (name in options) {\n        copy = options[name];\n\n        // Prevent Object.prototype pollution\n        // Prevent never-ending loop\n        if (name === \"__proto__\" || target === copy) {\n          continue;\n        }\n\n        // Recurse if we're merging plain objects or arrays\n        if (\n          deep &&\n          copy &&\n          (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))\n        ) {\n          src = target[name];\n\n          // Ensure proper type for the source value\n          if (copyIsArray && !Array.isArray(src)) {\n            clone = [];\n          } else if (!copyIsArray && !isPlainObject(src)) {\n            clone = {};\n          } else {\n            clone = src;\n          }\n          copyIsArray = false;\n\n          // Never move original objects, clone them\n          target[name] = extend(deep, clone, copy);\n\n          // Don't bring in undefined values\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nfunction mergeObjects(left: any, right: any, names: string[]) {\n  if (left === right) return;\n  for (let i = 0; i < names.length; i++) {\n    if (\n      right[names[i]] === null ||\n      [\n        \"string\",\n        \"boolean\",\n        \"null\",\n        \"undefined\",\n        \"symbol\",\n        \"number\",\n        \"bigint\",\n        \"regexp\"\n      ].indexOf((typeof right[names[i]]).toLowerCase()) > -1\n    ) {\n      let descriptor = Object.getOwnPropertyDescriptor(right, names[i]);\n      Object.defineProperty(left, names[i], descriptor as PropertyDescriptor);\n    } else {\n      left[names[i]] = extend(true, left[names[i]], right[names[i]]);\n    }\n  }\n}\n\nfunction joinSource<TContext, TJoinObject>(\n  this: TContext,\n  withObject: TJoinObject,\n  joinType: JoinTypes = JoinTypes.expand\n): TContext & TJoinObject {\n  if ((joinType | 0b1111) <= 0)\n    throw new Error(\"Invalid join type. Please select join type\");\n\n  if (joinType === (JoinTypes.left | JoinTypes.innerLeft)) {\n    return this as any;\n  }\n\n  let names = getPartNames(this, withObject);\n\n  //merge\n  switch (joinType & JoinTypes.innerJoin) {\n    case JoinTypes.none:\n      clearNames(this, names.middle);\n      break;\n    case JoinTypes.innerLeft:\n      break;\n    case JoinTypes.innerRight:\n      attach(this, withObject, names.middle);\n      break;\n    case JoinTypes.innerJoin:\n      mergeObjects(this, withObject, names.middle);\n      break;\n  }\n\n  //left\n  if ((joinType & JoinTypes.left) !== JoinTypes.left) {\n    clearNames(this, names.left);\n  }\n\n  //right\n  if ((joinType & JoinTypes.right) === JoinTypes.right) {\n    attach(this, withObject, names.right);\n  }\n\n  return this as any;\n}\n\nexport function join(joinType: JoinTypes = JoinTypes.expand) {\n  if (!joinType) {\n    throw new Error('Unknown join type');\n  }\n  return function<TContext>(context: TContext) {\n    return function<TJoinObject>(joinObject: TJoinObject): TContext & TJoinObject {\n      return joinSource.call(context, joinObject, joinType) as TContext & TJoinObject;\n    }\n  }\n}"],"names":[],"mappings":"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"}